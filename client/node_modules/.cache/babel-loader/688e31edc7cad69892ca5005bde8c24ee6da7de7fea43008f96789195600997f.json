{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import PublicBeltSection from'./components/PublicBeltSection';import'./PublicApp.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PublicApp(){const[syllabus,setSyllabus]=useState({});const[cumulativeSyllabus,setCumulativeSyllabus]=useState({});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[searchTerm,setSearchTerm]=useState('');const[selectedBelt,setSelectedBelt]=useState('all');const[expandedBelts,setExpandedBelts]=useState({});// Toggle expansion state for a belt section\nconst toggleBeltExpand=belt=>{setExpandedBelts(prev=>({...prev,[belt]:!prev[belt]}));};// Initialize all belts as expanded by default\nuseEffect(()=>{if(Object.keys(syllabus).length>0&&Object.keys(expandedBelts).length===0){const initialExpandedState={};Object.keys(syllabus).forEach(belt=>{initialExpandedState[belt]=true;// Start with all belts expanded\n});setExpandedBelts(initialExpandedState);}},[syllabus,expandedBelts]);// Belt progression order for cumulative display\nconst beltOrder=['Red Belt','Yellow Belt','Orange Belt','Green Belt','Purple Belt','Blue Belt','Brown Belt','Brown/Black Stripe','Black Belt'];useEffect(()=>{fetchSyllabus();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);// fetchSyllabus is stable and doesn't need to be in deps\n// Create cumulative syllabus where each belt includes all previous techniques\nconst createCumulativeSyllabus=syllabusData=>{const cumulative={};const allItemsByCategory=new Map();// Track items by category across all belts\ntry{// First pass: collect all unique items by category across all belts\nbeltOrder.forEach(belt=>{if(!syllabusData||!syllabusData[belt])return;Object.entries(syllabusData[belt]).forEach(_ref=>{let[category,items]=_ref;if(!Array.isArray(items))return;// Initialize category if it doesn't exist\nif(!allItemsByCategory.has(category)){allItemsByCategory.set(category,new Map());}const categoryItems=allItemsByCategory.get(category);// Add items from this belt to the category\nitems.forEach(item=>{if(!item)return;const safeItem={...item,traditional:item.traditional||'',english:item.english||'',isCurrentBelt:false,// Will be set to true for the belt it first appears in\n_originBelt:belt};const itemKey=`${safeItem.traditional}_${safeItem.english}`.toLowerCase();// Only add if we haven't seen this item in this category before\nif(!categoryItems.has(itemKey)){categoryItems.set(itemKey,{...safeItem,_firstSeenBelt:belt// Track where this item first appeared\n});}});});});// Second pass: build cumulative syllabus for each belt\nconst processedBelts=new Set();beltOrder.forEach(belt=>{if(!syllabusData||!syllabusData[belt])return;const currentBeltData={};// Get all categories from all belts up to this one\nconst allCategories=new Set();beltOrder.slice(0,beltOrder.indexOf(belt)+1).forEach(b=>{if(syllabusData[b]){Object.keys(syllabusData[b]).forEach(cat=>allCategories.add(cat));}});// Process each category that exists up to this belt\nallCategories.forEach(category=>{if(!allItemsByCategory.has(category))return;const categoryItems=[];const categoryMap=allItemsByCategory.get(category);// Add all items from this category that were first seen in this or previous belts\ncategoryMap.forEach((item,key)=>{if(beltOrder.indexOf(item._firstSeenBelt)<=beltOrder.indexOf(belt)){categoryItems.push({...item,isCurrentBelt:item._firstSeenBelt===belt});}});if(categoryItems.length>0){currentBeltData[category]=categoryItems;}});// Save the complete data for this belt\ncumulative[belt]=currentBeltData;processedBelts.add(belt);// Item count calculation kept for potential future use\nconst itemCount=Object.values(currentBeltData).reduce((total,items)=>total+((items===null||items===void 0?void 0:items.length)||0),0);});// Debug logging removed for production\nreturn cumulative;}catch(error){console.error('Error in createCumulativeSyllabus:',error);console.error('Error details:',{message:error.message,stack:error.stack});return cumulative;}};const fetchSyllabus=async()=>{try{setLoading(true);const response=await axios.get('/api/syllabus/senior');const syllabusData=response.data;// Ensure the syllabus data has the expected structure\nif(!syllabusData||typeof syllabusData!=='object'){throw new Error('Invalid syllabus data format');}setSyllabus(syllabusData);// Create and set cumulative syllabus data\nconst cumulative=createCumulativeSyllabus(syllabusData);setCumulativeSyllabus(cumulative);}catch(error){console.error('Error fetching syllabus:',error);setError(`Error loading syllabus data: ${error.message}`);}finally{setLoading(false);}};const filteredSyllabus=()=>{let filtered=syllabus;// Filter by selected belt\nif(selectedBelt!=='all'){filtered={[selectedBelt]:syllabus[selectedBelt]};}// Filter by search term\nif(searchTerm.trim()){const searchLower=searchTerm.toLowerCase();const result={};Object.entries(filtered).forEach(_ref2=>{let[belt,categories]=_ref2;const filteredCategories={};let hasMatch=false;Object.entries(categories).forEach(_ref3=>{let[category,items]=_ref3;const filteredItems=items.filter(item=>{if(item.traditional&&item.traditional.toLowerCase().includes(searchLower))return true;if(item.english&&item.english.toLowerCase().includes(searchLower))return true;if(item.name&&item.name.toLowerCase().includes(searchLower))return true;if(item.requirements&&item.requirements.some(req=>req.toLowerCase().includes(searchLower)))return true;return false;});if(filteredItems.length>0){filteredCategories[category]=filteredItems;hasMatch=true;}});if(hasMatch){result[belt]=filteredCategories;}});return result;}return filtered;};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"public-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading syllabus...\"})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"public-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})});}const beltOptions=Object.keys(syllabus);const filteredData=filteredSyllabus();return/*#__PURE__*/_jsxs(\"div\",{className:\"public-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"search-section\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search techniques, kata, or requirements...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"search-input\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"belt-filter\",children:\"Filter by Belt:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"belt-filter\",value:selectedBelt,onChange:e=>setSelectedBelt(e.target.value),className:\"belt-filter\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All Belts\"}),beltOptions.map(belt=>/*#__PURE__*/_jsx(\"option\",{value:belt,children:belt},belt))]})]})]}),Object.keys(filteredData).length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-results\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"No results found for \\\"\",searchTerm,\"\\\"\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSearchTerm(''),className:\"btn btn-primary\",children:\"Clear Search\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"syllabus-content\",children:beltOrder.map(belt=>{if(!syllabus[belt])return null;return/*#__PURE__*/_jsx(PublicBeltSection,{belt:belt,categories:syllabus[belt],cumulativeCategories:cumulativeSyllabus[belt]||{},isExpanded:expandedBelts[belt],onToggleExpand:()=>toggleBeltExpand(belt),searchTerm:searchTerm,isVisible:selectedBelt==='all'||selectedBelt===belt},belt);})}),/*#__PURE__*/_jsxs(\"footer\",{className:\"public-footer\",children:[/*#__PURE__*/_jsx(\"p\",{children:\" Peninsula Karate 2025\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/admin\",className:\"admin-link\",children:\"Admin Access\"})})]})]});}export default PublicApp;","map":{"version":3,"names":["React","useState","useEffect","axios","PublicBeltSection","jsx","_jsx","jsxs","_jsxs","PublicApp","syllabus","setSyllabus","cumulativeSyllabus","setCumulativeSyllabus","loading","setLoading","error","setError","searchTerm","setSearchTerm","selectedBelt","setSelectedBelt","expandedBelts","setExpandedBelts","toggleBeltExpand","belt","prev","Object","keys","length","initialExpandedState","forEach","beltOrder","fetchSyllabus","createCumulativeSyllabus","syllabusData","cumulative","allItemsByCategory","Map","entries","_ref","category","items","Array","isArray","has","set","categoryItems","get","item","safeItem","traditional","english","isCurrentBelt","_originBelt","itemKey","toLowerCase","_firstSeenBelt","processedBelts","Set","currentBeltData","allCategories","slice","indexOf","b","cat","add","categoryMap","key","push","itemCount","values","reduce","total","console","message","stack","response","data","Error","filteredSyllabus","filtered","trim","searchLower","result","_ref2","categories","filteredCategories","hasMatch","_ref3","filteredItems","filter","includes","name","requirements","some","req","className","children","beltOptions","filteredData","type","placeholder","value","onChange","e","target","htmlFor","id","map","onClick","cumulativeCategories","isExpanded","onToggleExpand","isVisible","href"],"sources":["/Users/lloydhird/development/PKSyllabus/client/src/PublicApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PublicBeltSection from './components/PublicBeltSection';\nimport './PublicApp.css';\n\nfunction PublicApp() {\n  const [syllabus, setSyllabus] = useState({});\n  const [cumulativeSyllabus, setCumulativeSyllabus] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedBelt, setSelectedBelt] = useState('all');\n  const [expandedBelts, setExpandedBelts] = useState({});\n\n  // Toggle expansion state for a belt section\n  const toggleBeltExpand = (belt) => {\n    setExpandedBelts(prev => ({\n      ...prev,\n      [belt]: !prev[belt]\n    }));\n  };\n\n  // Initialize all belts as expanded by default\n  useEffect(() => {\n    if (Object.keys(syllabus).length > 0 && Object.keys(expandedBelts).length === 0) {\n      const initialExpandedState = {};\n      Object.keys(syllabus).forEach(belt => {\n        initialExpandedState[belt] = true; // Start with all belts expanded\n      });\n      setExpandedBelts(initialExpandedState);\n    }\n  }, [syllabus, expandedBelts]);\n\n  // Belt progression order for cumulative display\n  const beltOrder = [\n    'Red Belt',\n    'Yellow Belt', \n    'Orange Belt',\n    'Green Belt',\n    'Purple Belt',\n    'Blue Belt',\n    'Brown Belt',\n    'Brown/Black Stripe',\n    'Black Belt'\n  ];\n\n  useEffect(() => {\n    fetchSyllabus();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // fetchSyllabus is stable and doesn't need to be in deps\n\n  // Create cumulative syllabus where each belt includes all previous techniques\n  const createCumulativeSyllabus = (syllabusData) => {\n    const cumulative = {};\n    const allItemsByCategory = new Map(); // Track items by category across all belts\n    \n    try {\n      // First pass: collect all unique items by category across all belts\n      beltOrder.forEach(belt => {\n        if (!syllabusData || !syllabusData[belt]) return;\n        \n        Object.entries(syllabusData[belt]).forEach(([category, items]) => {\n          if (!Array.isArray(items)) return;\n          \n          // Initialize category if it doesn't exist\n          if (!allItemsByCategory.has(category)) {\n            allItemsByCategory.set(category, new Map());\n          }\n          const categoryItems = allItemsByCategory.get(category);\n          \n          // Add items from this belt to the category\n          items.forEach(item => {\n            if (!item) return;\n            \n            const safeItem = {\n              ...item,\n              traditional: item.traditional || '',\n              english: item.english || '',\n              isCurrentBelt: false, // Will be set to true for the belt it first appears in\n              _originBelt: belt\n            };\n            \n            const itemKey = `${safeItem.traditional}_${safeItem.english}`.toLowerCase();\n            \n            // Only add if we haven't seen this item in this category before\n            if (!categoryItems.has(itemKey)) {\n              categoryItems.set(itemKey, {\n                ...safeItem,\n                _firstSeenBelt: belt // Track where this item first appeared\n              });\n            }\n          });\n        });\n      });\n      \n      // Second pass: build cumulative syllabus for each belt\n      const processedBelts = new Set();\n      \n      beltOrder.forEach(belt => {\n        if (!syllabusData || !syllabusData[belt]) return;\n        \n        const currentBeltData = {};\n        \n        // Get all categories from all belts up to this one\n        const allCategories = new Set();\n        beltOrder.slice(0, beltOrder.indexOf(belt) + 1).forEach(b => {\n          if (syllabusData[b]) {\n            Object.keys(syllabusData[b]).forEach(cat => allCategories.add(cat));\n          }\n        });\n        \n        // Process each category that exists up to this belt\n        allCategories.forEach(category => {\n          if (!allItemsByCategory.has(category)) return;\n          \n          const categoryItems = [];\n          const categoryMap = allItemsByCategory.get(category);\n          \n          // Add all items from this category that were first seen in this or previous belts\n          categoryMap.forEach((item, key) => {\n            if (beltOrder.indexOf(item._firstSeenBelt) <= beltOrder.indexOf(belt)) {\n              categoryItems.push({\n                ...item,\n                isCurrentBelt: item._firstSeenBelt === belt\n              });\n            }\n          });\n          \n          if (categoryItems.length > 0) {\n            currentBeltData[category] = categoryItems;\n          }\n        });\n        \n        // Save the complete data for this belt\n        cumulative[belt] = currentBeltData;\n        processedBelts.add(belt);\n        \n        // Item count calculation kept for potential future use\n        const itemCount = Object.values(currentBeltData).reduce(\n          (total, items) => total + (items?.length || 0), 0\n        );\n      });\n      \n      // Debug logging removed for production\n      \n      return cumulative;\n      \n    } catch (error) {\n      console.error('Error in createCumulativeSyllabus:', error);\n      console.error('Error details:', {\n        message: error.message,\n        stack: error.stack\n      });\n      return cumulative;\n    }\n  };\n\n  const fetchSyllabus = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/syllabus/senior');\n      const syllabusData = response.data;\n      \n      // Ensure the syllabus data has the expected structure\n      if (!syllabusData || typeof syllabusData !== 'object') {\n        throw new Error('Invalid syllabus data format');\n      }\n      \n      setSyllabus(syllabusData);\n      \n      // Create and set cumulative syllabus data\n      const cumulative = createCumulativeSyllabus(syllabusData);\n      setCumulativeSyllabus(cumulative);\n    } catch (error) {\n      console.error('Error fetching syllabus:', error);\n      setError(`Error loading syllabus data: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredSyllabus = () => {\n    let filtered = syllabus;\n    \n    // Filter by selected belt\n    if (selectedBelt !== 'all') {\n      filtered = { [selectedBelt]: syllabus[selectedBelt] };\n    }\n    \n    // Filter by search term\n    if (searchTerm.trim()) {\n      const searchLower = searchTerm.toLowerCase();\n      const result = {};\n      \n      Object.entries(filtered).forEach(([belt, categories]) => {\n        const filteredCategories = {};\n        let hasMatch = false;\n        \n        Object.entries(categories).forEach(([category, items]) => {\n          const filteredItems = items.filter(item => {\n            if (item.traditional && item.traditional.toLowerCase().includes(searchLower)) return true;\n            if (item.english && item.english.toLowerCase().includes(searchLower)) return true;\n            if (item.name && item.name.toLowerCase().includes(searchLower)) return true;\n            if (item.requirements && item.requirements.some(req => req.toLowerCase().includes(searchLower))) return true;\n            return false;\n          });\n          \n          if (filteredItems.length > 0) {\n            filteredCategories[category] = filteredItems;\n            hasMatch = true;\n          }\n        });\n        \n        if (hasMatch) {\n          result[belt] = filteredCategories;\n        }\n      });\n      \n      return result;\n    }\n    \n    return filtered;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"public-container\">\n        <div className=\"loading\">Loading syllabus...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"public-container\">\n        <div className=\"error\">{error}</div>\n      </div>\n    );\n  }\n\n  const beltOptions = Object.keys(syllabus);\n  const filteredData = filteredSyllabus();\n\n  return (\n    <div className=\"public-container\">\n\n      <div className=\"controls\">\n        <div className=\"search-section\">\n          <input\n            type=\"text\"\n            placeholder=\"Search techniques, kata, or requirements...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"search-input\"\n          />\n        </div>\n        \n        <div className=\"filter-section\">\n          <label htmlFor=\"belt-filter\">Filter by Belt:</label>\n          <select\n            id=\"belt-filter\"\n            value={selectedBelt}\n            onChange={(e) => setSelectedBelt(e.target.value)}\n            className=\"belt-filter\"\n          >\n            <option value=\"all\">All Belts</option>\n            {beltOptions.map(belt => (\n              <option key={belt} value={belt}>{belt}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {Object.keys(filteredData).length === 0 ? (\n        <div className=\"no-results\">\n          <p>No results found for \"{searchTerm}\"</p>\n          <button onClick={() => setSearchTerm('')} className=\"btn btn-primary\">\n            Clear Search\n          </button>\n        </div>\n      ) : (\n        <div className=\"syllabus-content\">\n          {beltOrder.map((belt) => {\n            if (!syllabus[belt]) return null;\n            \n            return (\n              <PublicBeltSection \n                key={belt}\n                belt={belt} \n                categories={syllabus[belt]}\n                cumulativeCategories={cumulativeSyllabus[belt] || {}}\n                isExpanded={expandedBelts[belt]}\n                onToggleExpand={() => toggleBeltExpand(belt)}\n                searchTerm={searchTerm}\n                isVisible={selectedBelt === 'all' || selectedBelt === belt}\n              />\n            );\n          })}\n        </div>\n      )}\n\n      <footer className=\"public-footer\">\n        <p> Peninsula Karate 2025</p>\n        <p>\n          <a href=\"/admin\" className=\"admin-link\">Admin Access</a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default PublicApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}