{"ast":null,"code":"import React,{useState}from'react';import PublicCategorySection from'./PublicCategorySection';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PublicBeltSection=_ref=>{let{belt,categories,searchTerm}=_ref;const[isExpanded,setIsExpanded]=useState(false);// Get belt color based on belt name\nconst getBeltColor=beltName=>{const beltColors={'Red Belt':{background:'linear-gradient(135deg, #dc7373 0%, #c85a5a 100%)',hover:'linear-gradient(135deg, #d66666 0%, #c24d4d 100%)'},'Yellow Belt':{background:'linear-gradient(135deg, #f4d03f 0%, #f1c40f 100%)',hover:'linear-gradient(135deg, #f2ca2e 0%, #e8b800 100%)'},'Orange Belt':{background:'linear-gradient(135deg, #f39c12 0%, #e67e22 100%)',hover:'linear-gradient(135deg, #f08c00 0%, #d35400 100%)'},'Green Belt':{background:'linear-gradient(135deg, #58d68d 0%, #27ae60 100%)',hover:'linear-gradient(135deg, #4dd080 0%, #229954 100%)'},'Blue Belt':{background:'linear-gradient(135deg, #5dade2 0%, #3498db 100%)',hover:'linear-gradient(135deg, #52a3dd 0%, #2e86c1 100%)'},'Purple Belt':{background:'linear-gradient(135deg, #af7ac5 0%, #9b59b6 100%)',hover:'linear-gradient(135deg, #a569bd 0%, #8e44ad 100%)'},'Brown Belt':{background:'linear-gradient(135deg, #b7950b 0%, #a0522d 100%)',hover:'linear-gradient(135deg, #a68a0a 0%, #8b4513 100%)'},'Black Belt':{background:'linear-gradient(135deg, #566573 0%, #2c3e50 100%)',hover:'linear-gradient(135deg, #4a5a6b 0%, #273746 100%)'},'Brown/Black Stripe':{background:'linear-gradient(135deg, #b7950b 0%, #a0522d 100%)',hover:'linear-gradient(135deg, #a68a0a 0%, #8b4513 100%)',isStriped:true},'White Belt':{background:'linear-gradient(135deg, #d5d8dc 0%, #aeb6bf 100%)',hover:'linear-gradient(135deg, #ccd1d6 0%, #a3acb5 100%)'}};// Default color for unknown belts\nreturn beltColors[beltName]||{background:'linear-gradient(135deg, #85929e 0%, #5d6d7e 100%)',hover:'linear-gradient(135deg, #7b8794 0%, #566573 100%)'};};const toggleExpanded=()=>{setIsExpanded(!isExpanded);};const getTotalItems=()=>{return Object.values(categories).reduce((total,items)=>{return total+(Array.isArray(items)?items.length:0);},0);};const getCategoryCount=()=>{return Object.keys(categories).length;};const beltColor=getBeltColor(belt);// Debug logging\nconsole.log('Belt:',belt,'Color:',beltColor);return/*#__PURE__*/_jsxs(\"div\",{className:\"public-belt-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`public-belt-header ${beltColor.isStriped?'striped-belt':''}`,onClick:toggleExpanded,style:{background:beltColor.background,'--hover-background':beltColor.hover},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:belt}),/*#__PURE__*/_jsxs(\"div\",{className:\"belt-stats\",children:[getCategoryCount(),\" categories \\u2022 \",getTotalItems(),\" techniques\"]})]}),/*#__PURE__*/_jsx(\"span\",{className:`expand-icon ${isExpanded?'expanded':''}`,children:\"\\u25B6\"})]}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"public-belt-content\",children:Object.entries(categories).map(_ref2=>{let[category,items]=_ref2;return/*#__PURE__*/_jsx(PublicCategorySection,{category:category,items:items,searchTerm:searchTerm},category);})})]});};export default PublicBeltSection;","map":{"version":3,"names":["React","useState","PublicCategorySection","jsx","_jsx","jsxs","_jsxs","PublicBeltSection","_ref","belt","categories","searchTerm","isExpanded","setIsExpanded","getBeltColor","beltName","beltColors","background","hover","isStriped","toggleExpanded","getTotalItems","Object","values","reduce","total","items","Array","isArray","length","getCategoryCount","keys","beltColor","console","log","className","children","onClick","style","entries","map","_ref2","category"],"sources":["/Users/lloydhird/development/PKSyllabus/client/src/components/PublicBeltSection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PublicCategorySection from './PublicCategorySection';\n\nconst PublicBeltSection = ({ belt, categories, searchTerm }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  // Get belt color based on belt name\n  const getBeltColor = (beltName) => {\n    const beltColors = {\n      'Red Belt': {\n        background: 'linear-gradient(135deg, #dc7373 0%, #c85a5a 100%)',\n        hover: 'linear-gradient(135deg, #d66666 0%, #c24d4d 100%)'\n      },\n      'Yellow Belt': {\n        background: 'linear-gradient(135deg, #f4d03f 0%, #f1c40f 100%)',\n        hover: 'linear-gradient(135deg, #f2ca2e 0%, #e8b800 100%)'\n      },\n      'Orange Belt': {\n        background: 'linear-gradient(135deg, #f39c12 0%, #e67e22 100%)',\n        hover: 'linear-gradient(135deg, #f08c00 0%, #d35400 100%)'\n      },\n      'Green Belt': {\n        background: 'linear-gradient(135deg, #58d68d 0%, #27ae60 100%)',\n        hover: 'linear-gradient(135deg, #4dd080 0%, #229954 100%)'\n      },\n      'Blue Belt': {\n        background: 'linear-gradient(135deg, #5dade2 0%, #3498db 100%)',\n        hover: 'linear-gradient(135deg, #52a3dd 0%, #2e86c1 100%)'\n      },\n      'Purple Belt': {\n        background: 'linear-gradient(135deg, #af7ac5 0%, #9b59b6 100%)',\n        hover: 'linear-gradient(135deg, #a569bd 0%, #8e44ad 100%)'\n      },\n      'Brown Belt': {\n        background: 'linear-gradient(135deg, #b7950b 0%, #a0522d 100%)',\n        hover: 'linear-gradient(135deg, #a68a0a 0%, #8b4513 100%)'\n      },\n      'Black Belt': {\n        background: 'linear-gradient(135deg, #566573 0%, #2c3e50 100%)',\n        hover: 'linear-gradient(135deg, #4a5a6b 0%, #273746 100%)'\n      },\n      'Brown/Black Stripe': {\n        background: 'linear-gradient(135deg, #b7950b 0%, #a0522d 100%)',\n        hover: 'linear-gradient(135deg, #a68a0a 0%, #8b4513 100%)',\n        isStriped: true\n      },\n      'White Belt': {\n        background: 'linear-gradient(135deg, #d5d8dc 0%, #aeb6bf 100%)',\n        hover: 'linear-gradient(135deg, #ccd1d6 0%, #a3acb5 100%)'\n      }\n    };\n\n    // Default color for unknown belts\n    return beltColors[beltName] || {\n      background: 'linear-gradient(135deg, #85929e 0%, #5d6d7e 100%)',\n      hover: 'linear-gradient(135deg, #7b8794 0%, #566573 100%)'\n    };\n  };\n\n  const toggleExpanded = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const getTotalItems = () => {\n    return Object.values(categories).reduce((total, items) => {\n      return total + (Array.isArray(items) ? items.length : 0);\n    }, 0);\n  };\n\n  const getCategoryCount = () => {\n    return Object.keys(categories).length;\n  };\n\n  const beltColor = getBeltColor(belt);\n  \n  // Debug logging\n  console.log('Belt:', belt, 'Color:', beltColor);\n\n  return (\n    <div className=\"public-belt-section\">\n      <div \n        className={`public-belt-header ${beltColor.isStriped ? 'striped-belt' : ''}`}\n        onClick={toggleExpanded}\n        style={{\n          background: beltColor.background,\n          '--hover-background': beltColor.hover\n        }}\n      >\n        <div>\n          <h2>{belt}</h2>\n          <div className=\"belt-stats\">\n            {getCategoryCount()} categories • {getTotalItems()} techniques\n          </div>\n        </div>\n        <span className={`expand-icon ${isExpanded ? 'expanded' : ''}`}>\n          ▶\n        </span>\n      </div>\n      \n      {isExpanded && (\n        <div className=\"public-belt-content\">\n          {Object.entries(categories).map(([category, items]) => (\n            <PublicCategorySection\n              key={category}\n              category={category}\n              items={items}\n              searchTerm={searchTerm}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PublicBeltSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}