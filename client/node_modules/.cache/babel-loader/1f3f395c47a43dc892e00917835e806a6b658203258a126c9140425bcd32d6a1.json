{"ast":null,"code":"var _jsxFileName = \"/Users/lloydhird/development/PKSyllabus/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst REAUTH_WINDOW_MS = 30 * 60 * 1000; // 30 minutes\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [lastReauthAt, setLastReauthAt] = useState(() => {\n    const ts = localStorage.getItem('lastReauthAt');\n    return ts ? Number(ts) : 0;\n  });\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Set the Authorization header for this specific request\n          const response = await api.get('/api/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n\n          // If we got here, the token is valid\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          setUser(response.data);\n          // Initialize reauth timestamp if not present\n          const now = Date.now();\n          if (!localStorage.getItem('lastReauthAt')) {\n            localStorage.setItem('lastReauthAt', String(now));\n            setLastReauthAt(now);\n          }\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        // Clear invalid token\n        localStorage.removeItem('token');\n        localStorage.removeItem('lastReauthAt');\n        delete api.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = (userData, token) => {\n    localStorage.setItem('token', token);\n    // Set the default Authorization header for all future requests\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    setUser(userData);\n    const now = Date.now();\n    localStorage.setItem('lastReauthAt', String(now));\n    setLastReauthAt(now);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('lastReauthAt');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setLastReauthAt(0);\n  };\n\n  // helper: should force re-auth?\n  const shouldReauth = () => {\n    if (!lastReauthAt) return true;\n    return Date.now() - lastReauthAt > REAUTH_WINDOW_MS;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      lastReauthAt,\n      shouldReauth\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"/D+hoyFVi/9bKcXDfjdy27xHN4A=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","api","jsxDEV","_jsxDEV","AuthContext","REAUTH_WINDOW_MS","AuthProvider","children","_s","user","setUser","loading","setLoading","lastReauthAt","setLastReauthAt","ts","localStorage","getItem","Number","checkAuth","token","response","get","headers","defaults","common","data","now","Date","setItem","String","error","console","removeItem","login","userData","logout","shouldReauth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/lloydhird/development/PKSyllabus/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport api from '../api';\n\nconst AuthContext = createContext();\nconst REAUTH_WINDOW_MS = 30 * 60 * 1000; // 30 minutes\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [lastReauthAt, setLastReauthAt] = useState(() => {\n    const ts = localStorage.getItem('lastReauthAt');\n    return ts ? Number(ts) : 0;\n  });\n\n  // Check if user is logged in on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Set the Authorization header for this specific request\n          const response = await api.get('/api/auth/me', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          \n          // If we got here, the token is valid\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          setUser(response.data);\n          // Initialize reauth timestamp if not present\n          const now = Date.now();\n          if (!localStorage.getItem('lastReauthAt')) {\n            localStorage.setItem('lastReauthAt', String(now));\n            setLastReauthAt(now);\n          }\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        // Clear invalid token\n        localStorage.removeItem('token');\n        localStorage.removeItem('lastReauthAt');\n        delete api.defaults.headers.common['Authorization'];\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = (userData, token) => {\n    localStorage.setItem('token', token);\n    // Set the default Authorization header for all future requests\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    setUser(userData);\n    const now = Date.now();\n    localStorage.setItem('lastReauthAt', String(now));\n    setLastReauthAt(now);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('lastReauthAt');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    setLastReauthAt(0);\n  };\n\n  // helper: should force re-auth?\n  const shouldReauth = () => {\n    if (!lastReauthAt) return true;\n    return Date.now() - lastReauthAt > REAUTH_WINDOW_MS;\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, logout, lastReauthAt, shouldReauth }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}