{"ast":null,"code":"var _jsxFileName = \"/Users/lloydhird/development/PKSyllabus/client/src/Router.js\";\nimport React from 'react';\nimport App from './App';\nimport PublicApp from './PublicApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Router = () => {\n  // Simple routing based on URL path\n  const path = window.location.pathname;\n\n  // Admin interface\n  if (path === '/admin' || path.startsWith('/admin/')) {\n    return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Public interface (default)\n  return /*#__PURE__*/_jsxDEV(PublicApp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n_c = Router;\nexport default Router;\nvar _c;\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"names":["React","App","PublicApp","jsxDEV","_jsxDEV","Router","path","window","location","pathname","startsWith","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lloydhird/development/PKSyllabus/client/src/Router.js"],"sourcesContent":["import React from 'react';\nimport App from './App';\nimport PublicApp from './PublicApp';\n\nconst Router = () => {\n  // Simple routing based on URL path\n  const path = window.location.pathname;\n  \n  // Admin interface\n  if (path === '/admin' || path.startsWith('/admin/')) {\n    return <App />;\n  }\n  \n  // Public interface (default)\n  return <PublicApp />;\n};\n\nexport default Router;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB;EACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;;EAErC;EACA,IAAIH,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACI,UAAU,CAAC,SAAS,CAAC,EAAE;IACnD,oBAAON,OAAA,CAACH,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChB;;EAEA;EACA,oBAAOV,OAAA,CAACF,SAAS;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACC,EAAA,GAXIV,MAAM;AAaZ,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}